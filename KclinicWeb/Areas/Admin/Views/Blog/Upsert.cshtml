@model Kclinic.Models.ViewModels.BlogVM

<style>
	/* For other boilerplate styles, see: https://www.tiny.cloud/docs/tinymce/6/editor-content-css/ */
	/*
	* For rendering images inserted using the image plugin.
	* Includes image captions using the HTML5 figure element.
	*/

	figure.image {
		display: inline-block;
		border: 1px solid gray;
		margin: 0 2px 0 1px;
		background: #f5f2f0;
	}

	figure.align-left {
		float: left;
	}

	figure.align-right {
		float: right;
	}

	figure.image img {
		margin: 8px 8px 0 8px;
	}

	figure.image figcaption {
		margin: 6px 8px 6px 8px;
		text-align: center;
	}

	/*
	 Alignment using classes rather than inline styles
	 check out the "formats" option
	*/

	img.align-left {
		float: left;
	}

	img.align-right {
		float: right;
	}

	/* Basic styles for Table of Contents plugin (tableofcontents) */
	.mce-toc {
		border: 1px solid gray;
	}

		.mce-toc h2 {
			margin: 4px;
		}

		.mce-toc li {
			list-style-type: none;
		}
</style>
<script src="https://cdn.tiny.cloud/1/ruzxaoky8x0gdv9d1x8glgzib4vcvu11kojsihyfk0hocn5t/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<div class="container">
<form method="post" asp-action="Upsert" enctype="multipart/form-data">
	<input asp-for="Blog.Id" hidden />
	<input asp-for="Blog.ImageUrl" hidden />

	<div class="row">
		<div class="col-10">
			<div class="border p-3 mt-4 row">
		<div class="col-12 pb-2">
			<h2 class="text-primary">@(Model.Blog.Id!=0?"Update": "Create")  Blog</h2>
			<hr />
		</div>
		@*<div asp-validation-summary="All"></div>*@
		<div class="mb-3">
			<label asp-for="Blog.Title"></label>
			<input asp-for="Blog.Title" class="form-control" />
			<span asp-validation-for="Blog.Title" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Blog.Description"></label>
			<textarea asp-for="Blog.Description" rows="3" class="form-control" id="open-source-plugins"></textarea>
			<span asp-validation-for="Blog.Description" class="text-danger"></span>
		</div>
		<div class="mb-3 col-6">
			<label asp-for="Blog.Author"></label>
			<input asp-for="Blog.Author" class="form-control" />
			<span asp-validation-for="Blog.Author" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Blog.ImageUrl"></label>
			<input type="file" id="uploadBox" name="file" class="form-control" />
		</div>
		<br	/>
		<div class="mb-3 col-md-6">
			<label asp-for="Blog.CategoryId"></label>
			<select asp-for="Blog.CategoryId" asp-items="@Model.CategoryList" class="form-select">
				<option disabled selected>--Select Category--</option>
			</select>
			<span asp-validation-for="Blog.CategoryId" class="text-danger"></span>
		</div>

		<div class="mb-3 col-md-6">
			<label asp-for="Blog.CoverTypeId"></label>
			<select asp-for="Blog.CoverTypeId" asp-items="@Model.CoverTypeList" class="form-select">
				<option disabled selected>--Select CoverType--</option>
			</select>
			<span asp-validation-for="Blog.CoverTypeId" class="text-danger"></span>
		</div>
		<br /><br />
		<div class="col-12">
			@if (Model.Blog.Id != 0)
			{
				<button type="submit" class="btn btn-primary" style="width:150px">Update</button>
			}
			else
			{
				<button type="submit" onclick="return ValidateInput()" class="btn btn-primary" style="width:150px">Create</button>
			}
			<a asp-controller="Blog" asp-action="Index" class="btn btn-secondary" style="width:150px">
				Back to List
			</a>
		</div>

	</div>
		</div>
		<div class="col-2 pt-4">
			<img src="@Model.Blog.ImageUrl"
			width="100%" style="border-radius:5px; border:1px solid #bbb9b9" />
		</div>
	</div>

</form>
</div>
@section Scripts{
	@{
	<partial name="_ValidationScriptsPartial" />
	}
<script>
	const useDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
	const isSmallScreen = window.matchMedia('(max-width: 1023.5px)').matches;

	tinymce.init({
			selector: 'textarea#open-source-plugins',
			plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
			editimage_cors_hosts: ['picsum.photos'],
			menubar: 'file edit view insert format tools table help',
			toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',
			toolbar_sticky: false,
			toolbar_sticky_offset: isSmallScreen ? 102 : 108,
			autosave_ask_before_unload: true,
			autosave_interval: '30s',
			autosave_prefix: '{path}{query}-{id}-',
			autosave_restore_when_empty: false,
			autosave_retention: '2m',
			image_advtab: true,
			link_list: [
				{ title: 'My page 1', value: 'https://www.tiny.cloud' },
				{ title: 'My page 2', value: 'http://www.moxiecode.com' }
			],
			image_list: [
				{ title: 'My page 1', value: 'https://www.tiny.cloud' },
				{ title: 'My page 2', value: 'http://www.moxiecode.com' }
			],
			image_class_list: [
				{ title: 'None', value: '' },
				{ title: 'Some class', value: 'class-name' }
			],
			importcss_append: true,
			file_picker_callback: (callback, value, meta) => {
				/* Provide file and text for the link dialog */
				if (meta.filetype === 'file') {
					callback('https://www.google.com/logos/google.jpg', { text: 'My text' });
				}

				/* Provide image and alt text for the image dialog */
				if (meta.filetype === 'image') {
					callback('https://www.google.com/logos/google.jpg', { alt: 'My alt text' });
				}

				/* Provide alternative source and posted for the media dialog */
				if (meta.filetype === 'media') {
					callback('movie.mp4', { source2: 'alt.ogg', poster: 'https://www.google.com/logos/google.jpg' });
				}
			},
			templates: [
				{ title: 'New Table', description: 'creates a new table', content: '<div class="mceTmpl"><table width="98%%"  border="0" cellspacing="0" cellpadding="0"><tr><th scope="col"> </th><th scope="col"> </th></tr><tr><td> </td><td> </td></tr></table></div>' },
				{ title: 'Starting my story', description: 'A cure for writers block', content: 'Once upon a time...' },
				{ title: 'New list with dates', description: 'New List with dates', content: '<div class="mceTmpl"><span class="cdate">cdate</span><br><span class="mdate">mdate</span><h2>My List</h2><ul><li></li><li></li></ul></div>' }
			],
			template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',
			template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]',
			height: 600,
			image_caption: true,
			images_upload_url: '/UploadImage',
			images_upload_handler: imageUploadHandler,
			quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
			noneditable_class: 'mceNonEditable',
			toolbar_mode: 'sliding',
			contextmenu: 'link image table',
			skin: useDarkMode ? 'oxide-dark' : 'oxide',
			content_css: useDarkMode ? 'dark' : 'default',
			content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'
	});

	// Custom function to handle image uploads
	function imageUploadHandler(blobInfo, success, failure) {
		// Call the server-side API to save the image on the server
		var xhr, formData;
		xhr = new XMLHttpRequest();
		xhr.withCredentials = false;
		xhr.open('POST', '/UploadImage'); // The URL where the image will be uploaded

		// Set the response type to 'json'
		xhr.responseType = 'json';

		xhr.onload = function () {
			if (xhr.status !== 200) {
				failure('HTTP Error: ' + xhr.status);
				return;
			}
			if (!xhr.response || typeof xhr.response.location !== 'string') {
				failure('Invalid JSON: ' + JSON.stringify(xhr.response));
				return;
			}
			success(xhr.response.location); // Image URL returned by the server
		};
		xhr.onerror = function () {
			failure('Network error occurred while trying to upload the image.');
		};

		formData = new FormData();
		formData.append('file', blobInfo.blob(), blobInfo.filename());
		xhr.send(formData);
	}

	function ValidateInput(){
		if(document.getElementById("uploadBox").value==""){
			Swal.fire({
			  icon: 'error',
			  title: 'Oops...',
			  text: 'Please upload an Image!',
			});
			return false;
		}
		return true;
	}
</script>
}
